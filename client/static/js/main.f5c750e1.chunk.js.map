{"version":3,"sources":["config/axios.js","config/constants.js","state/general/actions.js","state/general/types.js","state/tasks/actions.js","state/tasks/types.js","components/tasks/Task.component.js","components/tasks/TaskCard.component.js","components/tasks/TasksColumn.component.js","components/tasks/TaskModal.component.js","state/users/actions.js","state/users/types.js","components/tasks/TasksPanel.component.js","components/general/Message.component.js","components/general/Sidenav.component.js","components/auth/Login.component.js","components/auth/Register.component.js","state/tasks/reducer.js","state/general/reducer.js","state/users/reducer.js","state/reducer.js","store.js","components/auth/PrivateRoute.component.js","App.js","serviceWorker.js","index.js","resources/images/login-user.svg"],"names":["axiosApi","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","setMessage","type","payload","arguments","length","undefined","message","setTasksData","tasksData","showTaskModal","taskId","hideTaskModal","Task","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","saveTask","bind","assertThisInitialized","state","task","nextProps","id","setState","evt","preventDefault","updateTask","addTask","objectSpread","defineProperty","target","value","_this2","react_default","a","createElement","onChange","updateState","name","onSubmit","className","htmlFor","required","title","placeholder","description","rows","status_id","keys","statuses","map","statusId","key","assigned_user_id","users","userId","username","type_id","types","typeId","task_id","tasks","time_estimate","actual_time","React","Component","connect","taskData","dispatch","put","then","res","updateTaskData","catch","err","post","data","TaskCard","showModal","openTaskModal","react_beautiful_dnd_esm","draggableId","index","provided","snapshot","assign","draggableProps","dragHandleProps","ref","innerRef","card","onClick","ownProps","TasksColumn","style","textAlign","status","droppableId","droppableProps","taskIds","TaskCard_component","TaskModal","modal","visible","task_modal","isShown","onCancel","footer","Task_component","setRegisterErrors","errors","setLoginError","setAuthUserData","user","logout","setUsersData","TasksPanel","result","updateTaskStatus","getTasks","getUsers","icon","onDragEnd","status_order","TasksColumn_component","TaskModal_component","get","dropEventData","destination","source","response","Message","console","log","$this","setTimeout","removeMessage","messageType","es_alert","general","Sidenav","e","history","push","menuItems","auth","isAuthenticated","href","Fragment","react_router_dom","to","withRouter","Login","email","password","setStateUserData","login","src","UserIcon","loginError","Register","confirmPassword","photo","files","register","registerErrors","FormData","append","validationErrors","forEach","validationError","path","meessage","initialState","authUser","combineReducers","action","statusOrder","task_types","taskType","task_statuses","taskStatus","newState","_objectSpread8","start","finish","newTaskIds","Array","from","splice","newStatus","startTaskIds","newStart","finishTaskIds","newFinish","moveTask","updatedTaskId","oldTaskStatus","_objectSpread2","oldTaskIndex","indexOf","oldStatusTasks","slice","newStatusTasks","statusNewTasks","setItem","jwt_decode","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","isAuth","_ref","component","rest","objectWithoutProperties","react_router","render","authToken","decoded","currentTime","Date","now","exp","location","App","es","Sidenav_component","Message_component","PrivateRoute_component","exact","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f5c750e1.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {API_URL} from \"./constants\";\r\n\r\nconst axiosApi = axios.create({\r\n    baseURL: API_URL\r\n});\r\n\r\naxiosApi.interceptors.request.use((config) => {\r\n    let token = localStorage.getItem('authToken');\r\n    if(token){\r\n        config.headers['Authorization'] = token;\r\n    }\r\n    return config;\r\n\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default axiosApi;\r\n","export const API_URL = 'http://localhost:4000/api/';","import {REMOVE_MESSAGE, SET_MESSAGE} from \"./types\";\r\n\r\n\r\nexport const setMessage = (paylaod = {type: \"\", message : \"\"}) => {\r\n    return {\r\n        type: SET_MESSAGE,\r\n        payload: paylaod\r\n    }\r\n}\r\n\r\nexport const removeMessage = () => {\r\n    return {\r\n        type: REMOVE_MESSAGE\r\n    }\r\n}","export const SET_MESSAGE = 'SET_MESSAGE';\r\nexport const REMOVE_MESSAGE = 'REMOVE_MESSAGE';","import axios from '../../config/axios';\r\nimport {\r\n    ADD_TASK_DATA,\r\n    GET_TASKS,\r\n    HIDE_TASK_MODAL,\r\n    MOVE_TASK,\r\n    SET_TASKS_DATA,\r\n    SHOW_TASK_MODAL,\r\n    UPDATE_TASK_DATA\r\n} from \"./types\";\r\nimport {setMessage} from \"../general/actions\";\r\nimport {API_URL} from \"../../config/constants\";\r\nexport const getTasks = () => dispatch => {\r\n    axios.get('tasks')\r\n        .then(res => {\r\n            dispatch(setTasksData(res.data.data))\r\n        }).catch(err => {\r\n            dispatch(setMessage({message: 'Error while retrieving tasks, Please try again later', 'type': 'error'}))\r\n    })\r\n}\r\n\r\nexport const setTasksData = (tasksData) => {\r\n    return {\r\n        payload: tasksData,\r\n        type: SET_TASKS_DATA\r\n    };\r\n}\r\n\r\nexport const moveTask = (payload) => {\r\n    return {\r\n        type: MOVE_TASK,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const showTaskModal = (taskId) => {\r\n    return {\r\n        type: SHOW_TASK_MODAL,\r\n        payload: taskId,\r\n    }\r\n}\r\n\r\nexport const hideTaskModal = () => {\r\n    return {\r\n        type: HIDE_TASK_MODAL,\r\n    }\r\n}\r\n\r\nexport const updateTaskStatus = (dropEventData) => dispatch => {\r\n\r\n    if(dropEventData.destination != null)\r\n    {\r\n        if(\r\n            dropEventData.destination.droppableId === dropEventData.source.droppableId &&\r\n            dropEventData.destination.index === dropEventData.source.index\r\n        )\r\n            return;\r\n        const taskId = dropEventData.draggableId;\r\n        const statusId = dropEventData.destination.droppableId;\r\n        axios.put('tasks/update_status/'+ taskId, {status_id: statusId})\r\n            .then(res => {\r\n                dispatch(moveTask(dropEventData));\r\n                dispatch(setMessage({message: res.data.message, type:'success'}));\r\n\r\n            }).catch((err, res) => {\r\n            dispatch(setMessage({message: err.response.data.message, type:'error'}));\r\n        })\r\n    }\r\n    return ;\r\n}\r\n\r\nexport const updateTaskData = (payload  = {taskId: 0, taskData: {}}) => {\r\n    return {\r\n        type: UPDATE_TASK_DATA,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const addTaskData = (taskData) => {\r\n    return {\r\n        type: ADD_TASK_DATA,\r\n        payload: taskData\r\n    }\r\n}\r\n\r\nexport const updateTask = (taskId, taskData) => (dispatch) => {\r\n    axios.put( 'tasks/'+taskId, taskData).then((res) => {\r\n        dispatch(updateTaskData({taskId, taskData}));\r\n        dispatch(setMessage({message: 'Task saved successfully!', 'type' : 'success'}));\r\n        dispatch(hideTaskModal());\r\n    }).catch((err) => {\r\n        dispatch(setMessage({message: 'Task update failed!', 'type' : 'error'}));\r\n    })\r\n}\r\n\r\nexport const addTask = (taskData) => (dispatch) => {\r\n    axios.post('tasks/', taskData).then((res) => {\r\n        dispatch(addTaskData(res.data));\r\n        dispatch(setMessage({message: 'Task saved successfully!', 'type' : 'success'}));\r\n        dispatch(hideTaskModal());\r\n    }).catch((err) => {\r\n        dispatch(setMessage({message: 'Task save failed!', 'type' : 'error'}));\r\n    })\r\n}\r\n","export const GET_TASKS = 'GET_TASKS';\r\nexport const MOVE_TASK = 'MOVE_TASK';\r\nexport const SET_TASKS_DATA = 'SET_TASKS_DATA';\r\nexport const SHOW_TASK_MODAL = 'SHOW_TASK_MODAL';\r\nexport const HIDE_TASK_MODAL = 'HIDE_TASK_MODAL';\r\nexport const UPDATE_TASK_DATA = 'UPDATE_TASK_DATA';\r\nexport const ADD_TASK_DATA = 'ADD_TASK_DATA';","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {addTask, updateTask} from \"../../state/tasks/actions\";\r\nimport {Link} from \"react-router-dom\";\r\nclass Task extends React.Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.saveTask = this.saveTask.bind(this);\r\n        this.state = {\r\n            task: props.task\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        // You don't have to do this check first, but it can help prevent an unneeded render\r\n        if (nextProps.task.id !== this.state.task.id) {\r\n            this.setState({ task: nextProps.task });\r\n        }\r\n    }\r\n\r\n    saveTask(evt){\r\n        evt.preventDefault();\r\n        if(this.state.task.id)\r\n        {\r\n            this.props.updateTask(this.state.task.id,this.state.task);\r\n        }else{\r\n            this.props.addTask(this.state.task);\r\n        }\r\n    }\r\n\r\n    updateState(evt){\r\n        this.setState({\r\n            ...this.state,\r\n            task: {\r\n                ...this.state.task,\r\n                [evt.target.id]: evt.target.value\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        const task = this.state.task;\r\n        return (\r\n            <div>\r\n                <h4></h4>\r\n                <hr/>\r\n                <form onChange={(evt) => this.updateState(evt)} name='form'  onSubmit={(evt) => this.saveTask(evt)}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input  required value={this.state.task.title} type=\"text\" className=\"form-control\" id=\"title\" placeholder=\"Title\" />\r\n                        </div>\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <textarea  value={this.state.task.description} name='description' className=\"form-control\" id=\"description\" rows=\"6\"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"status_id\">Status</label>\r\n                            <select required value={this.state.task.status_id} id=\"status_id\" name=\"status_id\" className=\"form-control\">\r\n                                {Object.keys(this.props.statuses).map(statusId => {\r\n                                    return <option key={statusId} value={this.props.statuses[statusId].id}>{this.props.statuses[statusId].name}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"assigned_user_id\">Assignee</label>\r\n                            <select required onChange={(evt) => this.updateState(evt)}  value={this.state.task.assigned_user_id} id=\"assigned_user_id\" name=\"assigned_user_id\" className=\"form-control\">\r\n                                <option value=\"\">Select Assignee</option>\r\n                                {Object.keys(this.props.users).map(userId => {\r\n                                    return <option key={userId} value={this.props.users[userId].id}>{this.props.users[userId].username}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"type_id\">Type</label>\r\n                            <select  required value={this.state.task.type_id} id=\"type_id\" name=\"type_id\" className=\"form-control\">\r\n                                {Object.keys(this.props.types).map(typeId => {\r\n                                    return <option key={typeId} value={this.props.types[typeId].id}>{this.props.types[typeId].name}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"task_id\">Parent</label>\r\n                            <select  value={this.state.task.task_id} id=\"task_id\" name=\"task_id\" className=\"form-control\">\r\n                                <option value=\"0\"></option>\r\n                                {Object.keys(this.props.tasks).map(taskId => {\r\n                                    if(taskId == task.id)\r\n                                    {\r\n                                        return null;\r\n                                    }\r\n                                    return <option key={taskId} value={this.props.tasks[taskId].id}>{this.props.tasks[taskId].title}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"time_estimate\">Time Estimate</label>\r\n                            <input  value={this.state.task.time_estimate}  name=\"time_estimate\" type=\"number\" className=\"form-control\" id=\"time_estimate\"  />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"actual_time\">Actual Time</label>\r\n                            <input    value={this.state.task.actual_time} name=\"actual_time\" type=\"number\" className=\"form-control\" id=\"actual_time\"  />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                    <button type=\"submit\" className=\"btn pull-right btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapSstateToProps = (state, props) => {\r\n\r\n    let task = {\r\n        title: '',\r\n        description: '',\r\n        status_id: state.tasks.statuses[Object.keys(state.tasks.statuses)[0]].id,\r\n        type_id: state.tasks.types[Object.keys(state.tasks.types)[0]].id,\r\n        task_id: null,\r\n        time_estimate: null,\r\n        actual_time: null,\r\n        assigned_user_id: null,\r\n\r\n    };\r\n    if(props.taskId)\r\n    {\r\n        task =  state.tasks.tasks[props.taskId];\r\n    }else{\r\n\r\n    }\r\n    return {\r\n        task: task,\r\n        tasks: state.tasks.tasks,\r\n        statuses: state.tasks.statuses,\r\n        types: state.tasks.types,\r\n        users: state.users.users,\r\n    }\r\n\r\n}\r\nexport default connect(mapSstateToProps,{updateTask, addTask})(Task);","\r\nimport React from 'react';\r\nimport {Card, Col, Modal} from \"antd\";\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\nimport {connect} from \"react-redux\";\r\nimport \"../../styles/tasks-panel.css\"\r\nimport Task from \"./Task.component\";\r\nimport {showTaskModal} from \"../../state/tasks/actions\";\r\n\r\nclass TaskCard extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false\r\n        };\r\n        this.openTaskModal= this.openTaskModal.bind(this);\r\n    }\r\n\r\n    openTaskModal()\r\n    {\r\n       this.props.showTaskModal(this.props.task.id);\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"task-parent\">\r\n                <Draggable\r\n                    draggableId={this.props.task.id}\r\n                    index={this.props.index}\r\n                >\r\n                    { (provided, snapshot) =>\r\n                    {\r\n                        return (\r\n                            <div\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                ref={provided.innerRef}\r\n                                innerRef={provided.innerRef}\r\n                            >\r\n                            <Card\r\n                                onClick={this.openTaskModal}\r\n                                >\r\n                                <strong>{this.props.task.title}</strong>\r\n                            </Card>\r\n                            </div>\r\n\r\n                        );\r\n                    }\r\n\r\n                    }\r\n\r\n                </Draggable>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        task: state.tasks.tasks[ownProps.taskId]\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {showTaskModal})(TaskCard);","import React from 'react';\r\nimport {Col, Row} from \"antd\";\r\nimport TaskCard from \"./TaskCard.component\";\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\nimport \"../../styles/tasks-panel.css\"\r\nimport {connect} from \"react-redux\";\r\n\r\nclass TasksColumn extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"tasks-column\" >\r\n                <div>\r\n                    <div>\r\n                        <h1 style={{textAlign: \"center\"}}>\r\n                            {this.props.status.name}\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n\r\n                <Droppable\r\n                    droppableId={this.props.status.id}\r\n                    // type={this.props.column}\r\n                >\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            className=\"tasks-container\"\r\n                            ref={provided.innerRef}\r\n                            innerRef={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                        >\r\n                            {this.props.taskIds.map((task, index) => {\r\n                                return <TaskCard key={index} index={index} taskId={task}/>\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n\r\n                    )}\r\n\r\n                </Droppable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        taskIds: state.tasks.statuses[ownProps.status].tasks,\r\n        status: state.tasks.statuses[ownProps.status],\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(TasksColumn);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Modal} from \"antd\";\r\nimport Task from \"./Task.component\";\r\nimport {hideTaskModal} from \"../../state/tasks/actions\";\r\n\r\nclass TaskModal extends React.Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Modal\r\n                visible={this.props.task_modal.isShown}\r\n                onCancel={this.props.hideTaskModal}\r\n                footer={null}\r\n\r\n            >\r\n                <Task taskId={this.props.task_modal.taskId}>\r\n                </Task>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n    return {\r\n        task_modal: state.tasks.task_modal\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {hideTaskModal})(TaskModal);","import axios from '../../config/axios';\r\nimport {LOGOUT, SET_AUTH_USER_DATA, SET_LOGIN_ERROR, SET_REGISTER_ERRORS, SET_USERS} from \"./types\";\r\nimport {setMessage} from \"../general/actions\";\r\nimport {API_URL} from \"../../config/constants\";\r\n\r\n\r\nexport const getUsers = () => dispatch => {\r\n    axios.get('users/')\r\n        .then(res =>  {\r\n            dispatch(setUsersData(res.data));\r\n        }).catch(err => {\r\n            dispatch(setMessage({message: 'Users retrieval failed', type: 'error'}));\r\n    })\r\n}\r\n\r\nexport const login  = (email, password) => dispatch => {\r\n    axios.post('users/login', {email, password}).then((res) => {\r\n        dispatch(setAuthUserData(res.data));\r\n    }).catch((err) => {\r\n        dispatch(setLoginError('wrong email/password combination'));\r\n    })\r\n}\r\n\r\nexport const register = (payload = {username: '', email: '', password: ''}) => dispatch => {\r\n    const data = new FormData();\r\n    data.append('username', payload.username);\r\n    data.append('email', payload.email);\r\n    data.append('password', payload.password);\r\n    data.append('photo', payload.photo);\r\n    axios.post('users/register', data).then((res) => {\r\n        dispatch(setAuthUserData(res.data));\r\n    }).catch((err) => {\r\n        if(err.response.status === 400)\r\n        {\r\n            let validationErrors = {};\r\n            err.response.data.errors.forEach(validationError => {\r\n                validationErrors[validationError.path] = validationError.message;\r\n            });\r\n            dispatch(setRegisterErrors(validationErrors));\r\n        }else{\r\n            dispatch(setMessage({meessage: 'user creating failed', 'type':  'error'}));\r\n        }\r\n\r\n    })\r\n}\r\n\r\nexport const setRegisterErrors = (errors) => {\r\n    return {\r\n        type: SET_REGISTER_ERRORS,\r\n        payload: errors,\r\n    }\r\n}\r\n\r\nexport const setLoginError = (error) => {\r\n    return {\r\n        type: SET_LOGIN_ERROR,\r\n        payload: error,\r\n    }\r\n}\r\n\r\nexport const setAuthUserData  = (payload  = {user: {}, token: ''})  => {\r\n    return {\r\n        type: SET_AUTH_USER_DATA,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT\r\n    }\r\n}\r\n\r\nexport const setUsersData = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        payload: users\r\n    }\r\n}","export const SET_USERS = 'SET_USERS';\r\nexport const SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SET_REGISTER_ERRORS = \"SET_REGISTER_ERRORS\";\r\nexport const SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';","import React from 'react';\r\nimport { Icon} from 'antd';\r\nimport \"../../styles/tasks-panel.css\"\r\nimport TasksColumn from \"./TasksColumn.component\";\r\nimport {DragDropContext} from \"react-beautiful-dnd\";\r\nimport { connect } from \"react-redux\";\r\nimport {getTasks, moveTask, showTaskModal, updateTaskStatus} from \"../../state/tasks/actions\";\r\nimport TaskModal from './TaskModal.component';\r\nimport {getUsers} from \"../../state/users/actions\";\r\nclass TasksPanel extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = props.tasks;\r\n        this.updateTask = this.updateTask.bind(this);\r\n        this.showTaskModal = this.showTaskModal.bind(this);\r\n    }\r\n\r\n    updateTask(result)\r\n    {\r\n        this.props.updateTaskStatus(result);\r\n    }\r\n\r\n    showTaskModal()\r\n    {\r\n        this.props.showTaskModal();\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.props.getTasks();\r\n        this.props.getUsers();\r\n    }\r\n\r\n    render()\r\n    {\r\n        const data = this.props.tasks;\r\n        return(\r\n            <div id=\"tasks-panel\">\r\n                <Icon onClick={this.showTaskModal} className=\"addTask\" type=\"plus-circle\" />\r\n                <DragDropContext\r\n                    onDragEnd={(result) => this.updateTask(result)}\r\n                >\r\n                <div className=\"task-columns-container\">\r\n                    {data.status_order.map((status) => {\r\n\r\n                        return <TasksColumn key={status} status={status}/>\r\n                    })}\r\n                </div>\r\n                </DragDropContext>\r\n                <TaskModal/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => (\r\n    {\r\n        tasks: state.tasks\r\n    }\r\n)\r\nexport default connect(mapStateToProps, {getUsers, showTaskModal,updateTaskStatus, getTasks})(TasksPanel);","\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Alert} from 'antd';\r\nimport {removeMessage} from \"../../state/general/actions\";\r\nclass Message extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n    }\r\n\r\n    componentDidUpdate()\r\n    {\r\n        console.log(this.props.message.message);\r\n        if(this.props.message.message != \"\" && typeof this.props.message.message != 'undefined')\r\n        {\r\n            const $this = this;\r\n            setTimeout(() => {\r\n                $this.props.removeMessage();\r\n            }, 3000)\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        const message = this.props.message.message;\r\n        const messageType = this.props.message.type;\r\n        return (\r\n            <div className=\"message-container\">\r\n                {message  ? <Alert message={message} type={messageType} /> : \"\"}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        message: state.general.message\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {removeMessage})(Message);","\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from \"../../state/users/actions\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Sidenav extends React.Component {\r\n    logout(e)\r\n    {\r\n        e.preventDefault();\r\n        this.props.logout();\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render()\r\n    {\r\n        let menuItems ;\r\n        if(this.props.auth.isAuthenticated)\r\n        {\r\n            menuItems = (<li className=\"nav-item\">\r\n                <a onClick={(e) => this.logout(e)} className=\"nav-link\" href=\"#\">Logout</a>\r\n            </li>);\r\n        }else{\r\n            menuItems = (<React.Fragment>\r\n                <li className=\"nav-item\" >\r\n                            <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\" >\r\n                            <Link to=\"/register\" className=\"nav-link\">Register</Link>\r\n                        </li>\r\n                </React.Fragment>\r\n        );\r\n        }\r\n        return (\r\n            <div id=\"sidenav\">\r\n                <ul className=\"nav flex-column\">\r\n                    {menuItems}\r\n\r\n\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: {\r\n            isAuthenticated: state.users.isAuthenticated\r\n        }\r\n    }\r\n}\r\nexport default withRouter(connect( mapStateToProps, {logout})(Sidenav));","\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserIcon from '../../resources/images/login-user.svg';\r\nimport {login} from \"../../state/users/actions\";\r\nimport '../../resources/css/login.css';\r\nclass Login extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n        this.setStateUserData  = this.setStateUserData.bind(this);\r\n    }\r\n\r\n    setStateUserData(e)\r\n    {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    login(e)\r\n    {\r\n        e.preventDefault();\r\n        this.props.login(this.state.email, this.state.password);\r\n    }\r\n\r\n    componentWillMount()\r\n    {\r\n        if (this.props.isAuthenticated) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.isAuthenticated) {\r\n            this.props.history.push(\"/\"); // push user to dashboard when they login\r\n        }\r\n        if (nextProps.errors) {\r\n            // this.setState({\r\n            //     errors: nextProps.errors\r\n            // });\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n                <div className=\"login-form-container\">\r\n                    <form onChange={(e) => this.setStateUserData(e)} onSubmit={(e) => this.login(e)}>\r\n\r\n                    <div className=\"row mx-auto w-25  justify-content-center align-self-center\">\r\n                            <img className=\"w-50\" src={UserIcon}/>\r\n                        {this.props.error ? (<div className=\"text-danger\">Incorrect email/password</div>) :''}\r\n\r\n                            <div className=\" form-group form-inline\">\r\n                                <label className=\"mr-2\"  htmlFor=\"email\">Email</label>\r\n                                <input required value={this.state.email} type=\"email\" id=\"email\" name=\"email\" className=\"form-control\"/>\r\n                            </div>\r\n                            <div className=\" form-group  form-inline\">\r\n                                <label  className=\"mr-2\" htmlFor=\"password\">Name</label>\r\n                                <input required value={this.state.password} type=\"password\" id=\"password\" name='password' className=\"form-control\"/>\r\n                            </div>\r\n                        <div className=\"w-100 text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Login </button>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        isAuthenticated: state.users.isAuthenticated,\r\n        error: state.users.loginError,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserIcon from '../../resources/images/login-user.svg';\r\nimport {register} from \"../../state/users/actions\";\r\nimport '../../resources/css/register.css';\r\nclass Register extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            photo: null,\r\n            errors: false\r\n        }\r\n        this.setStateUserData  = this.setStateUserData.bind(this);\r\n    }\r\n\r\n    setStateUserData(e)\r\n    {\r\n        let value = e.target.value;\r\n        if(e.target.files)\r\n        {\r\n            value = e.target.files[0];\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: value\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.isAuthenticated) {\r\n            this.props.history.push(\"/\"); // push user to dashboard when they login\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    register(e)\r\n    {\r\n        e.preventDefault();\r\n        if(this.state.password != this.state.confirmPassword)\r\n        {\r\n            this.setState({\r\n                ...this.state,\r\n                errors:{\r\n                    ...this.state.errors,\r\n                    confirmPassword: 'Password dosen\\'t match'\r\n                }\r\n            })\r\n        }else{\r\n            this.props.register(this.state);\r\n        }\r\n    }\r\n\r\n    componentWillMount()\r\n    {\r\n        if (this.props.isAuthenticated) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.isAuthenticated) {\r\n            this.props.history.push(\"/\"); // push user to dashboard when they login\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                ...this.state,\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"register-form-container\">\r\n                <h1>Register</h1>\r\n                <hr/>\r\n\r\n                    <form  onChange={(e) => this.setStateUserData(e)} onSubmit={(e) => this.register(e)}>\r\n\r\n                        <div className={\"row form-group \" + (this.state.errors.username ? 'text-danger' : '')}>\r\n                            <div className=\"col-sm-2\">\r\n                                <label  className=\"col-form-label\" htmlFor=\"username\">Username</label>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <input required value={this.state.username} type=\"text\" id=\"username\" name='username' className={\"form-control \"+ (this.state.errors.username ? 'is-invalid': \"\")}/>\r\n                                {this.state.errors.username ? (<div className=\"invalid-feedback\">{this.state.errors.username}</div> ) : ''}\r\n                            </div>\r\n                        </div>\r\n                        <div className={\"row form-group \" + (this.state.errors.email ? 'text-danger' : '')}>\r\n                            <div className=\"col-sm-2\">\r\n                                <label className=\"col-form-label\"  htmlFor=\"email\">Email</label>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <input required value={this.state.email} type=\"email\" id=\"email\" name=\"email\" className={\"form-control \"+ (this.state.errors.email ? 'is-invalid': \"\")} />\r\n                                {this.state.errors.email ? (<div className=\"invalid-feedback\">{this.state.errors.email}</div> ) : ''}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className={\"row form-group \" + (this.state.errors.password ? 'text-danger' : '')}>\r\n                            <div className=\"col-sm-2\">\r\n                                <label   className=\"col-form-label\" htmlFor=\"password\">Password</label>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <input required value={this.state.password} type=\"password\" id=\"password\" name='password' className={\"form-control \"+ (this.state.errors.password ? 'is-invalid': \"\")}/>\r\n                                {this.state.errors.password ? (<div className=\"invalid-feedback\">{this.state.errors.password}</div> ) : ''}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={\"row form-group \" + (this.state.errors.confirmPassword ? 'text-danger' : '')}>\r\n                            <div className=\"col-sm-2\">\r\n                                <label  className=\"col-form-label\" htmlFor=\"password\">Confirm Password</label>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <input required value={this.state.confirmPassword} type=\"password\" id=\"confirmPassword\" name='confirmPassword' className={\"form-control \"+ (this.state.errors.confirmPassword ? 'is-invalid': \"\")}/>\r\n                                {this.state.errors.confirmPassword ? (<div className=\"invalid-feedback\">{this.state.errors.confirmPassword}</div> ) : ''}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className={\"row form-group \" + (this.state.errors.photo ? 'text-danger' : '')}>\r\n                            <div className=\"col-sm-2\">\r\n                                <label  className=\"col-form-label\" htmlFor=\"photo\">Photo</label>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <input  type=\"file\" id=\"photo\" name='photo' className={\"form-control \"+ (this.state.errors.photo ? 'is-invalid': \"\")}/>\r\n                                {this.state.errors.photo ? (<div className=\"invalid-feedback\">{this.state.errors.photo}</div> ) : ''}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"offset-md-9 col-md-1\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        isAuthenticated: state.users.isAuthenticated,\r\n        errors: state.users.registerErrors\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {register})(Register);","import {\r\n    ADD_TASK_DATA,\r\n    GET_TASKS,\r\n    HIDE_TASK_MODAL,\r\n    MOVE_TASK,\r\n    SET_TASKS_DATA,\r\n    SHOW_TASK_MODAL,\r\n    UPDATE_TASK_DATA\r\n} from \"./types\";\r\nconst initialState = {\r\n    \"tasks\": {\r\n    },\r\n    \"statuses\": {\r\n    },\r\n    \"types\": {\r\n\r\n    },\r\n    \"status_order\": [],\r\n    \"task_modal\": {\r\n        isShown: false,\r\n        taskId: null\r\n    }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type)\r\n    {\r\n        case SET_TASKS_DATA:\r\n            let statuses = {};\r\n            let tasks = {};\r\n            let statusOrder = [];\r\n            let types = {};\r\n            action.payload.task_types.forEach(taskType  => {\r\n                types[taskType.id] = taskType;\r\n            });\r\n            action.payload.task_statuses.forEach(taskStatus => {\r\n                taskStatus.tasks = taskStatus.tasks.map(task => {\r\n                    tasks[task.id] = task;\r\n                    return task.id;\r\n\r\n                })\r\n                statuses[taskStatus.id] = taskStatus;\r\n                statusOrder.push(taskStatus.id);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                tasks: {...tasks},\r\n                statuses: {...statuses},\r\n                status_order: statusOrder,\r\n                types: types,\r\n            };\r\n            break;\r\n        case MOVE_TASK:\r\n            const newState = moveTask(state, action.payload);\r\n            if(newState)\r\n            {\r\n                return newState;\r\n            }\r\n            return state;\r\n        break;\r\n        case SHOW_TASK_MODAL:\r\n            let taskId = action.payload;\r\n            if(!taskId)\r\n            {\r\n                taskId = null;\r\n            }\r\n            return {\r\n                ...state,\r\n                task_modal: {\r\n                    isShown: true,\r\n                    taskId: taskId\r\n                }\r\n            };\r\n            break;\r\n        case HIDE_TASK_MODAL:\r\n            return {\r\n                ...state,\r\n                task_modal: {\r\n                    isShown: false,\r\n                }\r\n            }\r\n            break;\r\n        case UPDATE_TASK_DATA:\r\n             const updatedTaskId = action.payload.taskId;\r\n             let taskData = action.payload.taskData;\r\n             var oldTaskStatus = state.tasks[updatedTaskId].status_id;\r\n             if(oldTaskStatus !== taskData.status_id)\r\n             {\r\n                 const oldTaskIndex = state.statuses[oldTaskStatus].tasks.indexOf(updatedTaskId);\r\n                 let oldStatusTasks = state.statuses[oldTaskStatus].tasks.slice();\r\n                 oldStatusTasks.splice(oldTaskIndex, 1);\r\n                 let newStatusTasks = state.statuses[taskData.status_id].tasks.slice();;\r\n                 newStatusTasks.splice(0,0,updatedTaskId);\r\n                 return {\r\n                     ...state,\r\n                     statuses: {\r\n                         ...state.statuses,\r\n                        [taskData.status_id]: {\r\n                            ...state.statuses[taskData.status_id],\r\n                            tasks: newStatusTasks,\r\n                        },\r\n                        [oldTaskStatus]: {\r\n                            ...state.statuses[oldTaskStatus],\r\n                            tasks: oldStatusTasks,\r\n                        }\r\n                     },\r\n                     tasks: {\r\n                         ...state.tasks,\r\n                         [updatedTaskId]: {...taskData}\r\n                     }\r\n                 }\r\n             }\r\n\r\n             return {\r\n                 ...state,\r\n                 tasks: {\r\n                     ...state.tasks,\r\n                     [updatedTaskId]: {...taskData}\r\n                 }\r\n             };\r\n            break;\r\n        case ADD_TASK_DATA:\r\n            let statusNewTasks = state.statuses[action.payload.status_id].tasks.slice();\r\n            statusNewTasks.splice(0,0, action.payload.id);\r\n            return {\r\n                ...state,\r\n                statuses: {\r\n                    ...state.statuses,\r\n                    [action.payload.status_id]: {\r\n                        ...state.statuses[action.payload.status_id],\r\n                        tasks: statusNewTasks\r\n                    }\r\n                },\r\n                tasks:{\r\n                    ...state.tasks,\r\n                    [action.payload.id]: action.payload\r\n                }\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction moveTask(state, result)\r\n{\r\n\r\n    const {destination, source, draggableId} = result;\r\n    if(!destination)\r\n    {\r\n        return;\r\n    }\r\n\r\n    if(\r\n        destination.droppableId === source.droppableId &&\r\n        destination.index === source.index\r\n    )\r\n        return;\r\n\r\n    const start = state.statuses[source.droppableId];\r\n    const finish = state.statuses[destination.droppableId];\r\n\r\n    if(start === finish)\r\n    {\r\n        const newTaskIds = Array.from(start.tasks);\r\n        newTaskIds.splice(source.index, 1);\r\n        newTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n        const newStatus = {\r\n            ...start,\r\n            tasks: newTaskIds\r\n        };\r\n\r\n        const newState = {\r\n            ...state,\r\n            statuses:{\r\n                ...state.statuses,\r\n                [newStatus.id]: newStatus\r\n            }\r\n        };\r\n        return newState;\r\n    }\r\n\r\n    //moving between columns\r\n    const startTaskIds = Array.from(start.tasks);\r\n    startTaskIds.splice(source.index, 1);\r\n    const newStart = {\r\n        ...start,\r\n        tasks: startTaskIds\r\n    }\r\n\r\n    const finishTaskIds = Array.from(finish.tasks);\r\n    finishTaskIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n        ...finish,\r\n        tasks: finishTaskIds\r\n    };\r\n\r\n    const newState = {\r\n        ...state,\r\n        statuses: {\r\n            ...state.statuses,\r\n            [newStart.id]: newStart,\r\n            [newFinish.id]: newFinish\r\n        }\r\n    }\r\n    return newState;\r\n}","import {REMOVE_MESSAGE, SET_MESSAGE} from \"./types\";\r\nconst initialState = {\r\n    \"message\": {message: \"\", type: \"\"}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type)\r\n    {\r\n        case SET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: {...state.message, message: action.payload.message, type: action.payload.type}\r\n            }\r\n            break;\r\n        case REMOVE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: {},\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    LOGOUT,\r\n    REMOVE_MESSAGE,\r\n    SET_AUTH_USER_DATA,\r\n    SET_LOGIN_ERROR,\r\n    SET_MESSAGE,\r\n    SET_REGISTER_ERRORS,\r\n    SET_USERS\r\n} from \"./types\";\r\nimport jwt_decode from 'jwt-decode';\r\nconst initialState = {\r\n    \"users\": {},\r\n    'authUser': {\r\n        id: '',\r\n        username: '',\r\n        email: '',\r\n        photo: ''\r\n    },\r\n    registerErrors: {\r\n\r\n    },\r\n    loginError: '',\r\n    isAuthenticated: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type)\r\n    {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: {...action.payload}\r\n            };\r\n            break;\r\n        case SET_AUTH_USER_DATA:\r\n            localStorage.setItem('authToken', action.payload.token);\r\n            return {\r\n                ...state,\r\n                authUser: jwt_decode(action.payload.token),\r\n                isAuthenticated: true\r\n            }\r\n            break;\r\n        case LOGOUT:\r\n            localStorage.removeItem('authToken');\r\n            return {\r\n                ...state,\r\n                authUser: {} ,\r\n                isAuthenticated: false,\r\n            };\r\n        case SET_REGISTER_ERRORS:\r\n            return{\r\n                ...state,\r\n                registerErrors: action.payload\r\n            };\r\n            break;\r\n        case SET_LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                loginError: action.payload\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport taskReducer from \"./tasks/reducer\";\r\nimport generalReducer from './general/reducer';\r\nimport userReducer from './users/reducer';\r\nexport default combineReducers({\r\n    tasks: taskReducer,\r\n    general: generalReducer,\r\n    users: userReducer,\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./state/reducer\";\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\nexport default store;","\r\nimport React from \"react\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nconst PrivateRoute = ({ component: Component, isAuth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n\r\n        {\r\n            return isAuth === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            );\r\n        }\r\n\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.users.isAuthenticated\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\nimport './App.css';\nimport TasksPanel from \"./components/tasks/TasksPanel.component\";\nimport Message from \"./components/general/Message.component\";\nimport Sidenav from \"./components/general/Sidenav.component\";\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport Login from './components/auth/Login.component';\nimport Register from './components/auth/Register.component';\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {Provider} from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from './components/auth/PrivateRoute.component';\nimport {logout, setAuthUserData} from \"./state/users/actions\";\n\n// Check for token to keep user logged in\nif (localStorage.authToken && localStorage.authToken != 'undefined') {\n\n    // Set auth token header auth\n    const token = localStorage.authToken;\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setAuthUserData({token}));\n// Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n        // Logout user\n        store.dispatch(logout());\n        // Redirect to login\n        window.location.href = \"./login\";\n    }\n}\nfunction App() {\n  return (\n      <Provider store={store}>\n          <Router>\n                <div className=\"App\">\n                    <Sidenav/>\n                    <div id=\"content\">\n                        <Message />\n                        <Switch>\n                            <PrivateRoute exact path=\"/\" component={TasksPanel} />\n                        </Switch>\n                        <Route path='/login' component={Login}/>\n                        <Route path='/register' component={Register}/>\n                    </div>\n\n                </div>\n          </Router>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/login-user.acdf4802.svg\";"],"sourceRoot":""}